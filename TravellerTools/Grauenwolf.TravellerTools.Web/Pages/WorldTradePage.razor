@page "/world/{milieuCode}/{sectorHex}/{planetHex}/trade"
@page "/uwp/{uwp}/trade"
@inherits NullablePageBase<WorldModel>

@if (Model != null)
{
    var current = Model.World;
    //var timeFormat = "h'h 'm'm 's's'";

    <h2>@current.Name</h2>
    <WorldNavigation CurrentPage="trade" World="@Model.World" MilieuCode="@MilieuCode" />
    <div>&nbsp;</div>

    <div>
        <EditForm Model="@Options">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <table class="gridtable">
                <tr>
                    <th>Traveller Edition</th>
                    <th>Options</th>
                    <th>Broker Score</th>
                    <th>Streetwise Score</th>
                    @if (Model.Destinations != null)
                    {
                        <th>Destination</th>
                    }
                </tr>
                <tr>
                    <td>
                        <InputSelect @bind-Value="Options.SelectedEdition">
                            @foreach (var item in TradeOptions.EditionList)
                                {
                                <option value="@(item.Code)" selected="@(Options.SelectedEditionCode == item.Code)"> @(item.Name)</option>
                                }
                        </InputSelect>
                    </td>
                    <td>
                        <label title="More variety in cargo types.">
                            <InputCheckbox @bind-Value="Options.AdvancedMode" />
                            Advanced Mode
                        </label>
                        <br />
                        <label title="Lowers the odds of finding rare goods. Adjusts the amount of goods available based on population.">
                            <InputCheckbox @bind-Value="Options.Raffle" />
                            Raffle
                        </label>
                        <br />
                        <label title="Illegal Goods use Streetwise instead of Broker.">
                            <InputCheckbox @bind-Value="Options.IllegalGoods" />
                            Allow Illegal Goods
                        </label>
                    </td>
                    <td>
                        <InputSelect @bind-Value="Options.BrokerScoreCode">
                            @for (var score = -6; score <= 8; score++)
                                {
                                <option value="@(score)" selected="@(Options.BrokerScore == score)"> @(score)</option>
                                }
                        </InputSelect>
                    </td>
                    <td>
                        <InputSelect @bind-Value="Options.StreetwiseScoreCode">
                            @for (var score = -6; score <= 8; score++)
                                {
                                <option value="@(score)" selected="@(Options.StreetwiseScore == score)"> @(score)</option>
                                }
                        </InputSelect>
                    </td>
                    @if (Model.Destinations != null)
                    {
                        <td>
                            <InputSelect @bind-Value="Options.DestinationIndexCode">
                                <option value="" selected="@(string.IsNullOrEmpty(Options.DestinationIndexCode))"></option>

                                @for (var jump = 1; jump <= 6; jump++)
                                        {
                                            if (Model.Destinations.Any(x => x.JumpDistance == jump))
                                            {
                                        <optgroup label="@("Jump " + jump)">
                                            @for (var index = 0; index < Model.Destinations.Count; index++)
                                                        if (Model.Destinations[index].JumpDistance == jump)
                                                        {
                                                    <option value="@(index)" selected="@(Options.DestinationIndex == index )">@Model.Destinations[index].Name</option>
                                                        }
                                        </optgroup>
                                            }
                                        }
                            </InputSelect>
                        </td>
                    }
                </tr>
            </table>
        </EditForm>
    </div>

    @if (Model.TradeList != null)
    {

        <div>&nbsp;</div>
        <h3>
            Available Trade Goods
            <a @onclick="Reroll" href="#" title="Reroll"><span class="oi oi-random" /></a>
            <a @onclick="Permalink" href="@(Permalink())" title="Permalink. Use this to share with your players."><span class="oi oi-link-intact" /></a>
        </h3>
        <p>Purchase DM does not include broker score.<br />Price modifier and current price include purchase DM, broker score, and random roll.</p>
        <table class="gridtable">
            <tr>
                <th>Type</th>
                @if (Options.AdvancedMode)
                {
                    <th>Subtype</th>
                }
                <th>Tons</th>
                <th>Base Price</th>
                <th>Purchase DM</th>
                <th>Modified Roll</th>
                <th>Price Modifier</th>
                <th>Current Price</th>
                @if (Options.DestinationIndex >= 0)
                {
                    <th title="Desirability of the good at the selected destination.">Destination DM</th>
                }
            </tr>
            @foreach (var lot in Model.TradeList.Lots)
            {
                <tr>
                    <td style="@( lot.Legal ? "" : "background-color:pink")">@lot.Type</td>
                    @if (Options.AdvancedMode)
                    {
                        <td>@lot.Subtype</td>
                    }
                    <td>@lot.Tons</td>
                    <td>@lot.BasePrice.ToString("N0")</td>
                    <td>@lot.PurchaseDM</td>
                    <td>@lot.Roll.ToString("N0")</td>
                    <td>@lot.PriceModifier.ToString("P2")</td>
                    <td>@lot.CurrentPrice.ToString("N0")</td>
                    @if (Options.DestinationIndex >= 0)
                    {
                        <td>@lot.DestinationDM</td>
                    }
                </tr>
            }
        </table>
        <div>&nbsp;</div>

        <h3>Desired Goods</h3>
        <p>Sale DM does not include broker score.<br />Price modifier and current price include sale DM, broker score, and random roll.</p>
        <table class="gridtable">
            <tr>
                <th>Type</th>
                @if (Options.AdvancedMode)
                {
                    <th>Subtype</th>
                }
                <th>Base Price</th>
                <th>Sale DM</th>
                <th>Modified Roll</th>
                <th>Price Modifier</th>
                <th>Current Price</th>
            </tr>
            @foreach (var lot in Model.TradeList.Bids)
            {
                <tr>
                    <td style="@( lot.Legal ? "" : "background-color:pink")">@lot.Type</td>
                    @if (Options.AdvancedMode)
                    {
                        <td>@lot.Subtype</td>
                    }
                    <td>@lot.BasePrice.ToString("N0")</td>
                    <td>@lot.SaleDM</td>
                    <td>@lot.Roll.ToString("N0")</td>
                    <td>@lot.PriceModifier.ToString("P2")</td>
                    <td>@lot.CurrentPrice.ToString("N0")</td>
                </tr>
            }
        </table>
    }

}
else if (LoadFailed)
{
    <h1>Error loading page.</h1>
}
else
{
    <h1>Loading</h1>
}
