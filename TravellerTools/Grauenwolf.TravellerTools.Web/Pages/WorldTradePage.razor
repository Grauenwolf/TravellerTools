@page "/world/{milieuCode}/{sectorHex}/{planetHex}/trade"
@page "/uwp/{uwp}/trade"
@inherits NullablePageBase<WorldModel>

@if (Model != null)
{
    var current = Model.World;
    //var timeFormat = "h'h 'm'm 's's'";

    <h2>@current.Name</h2>
    <WorldNavigation CurrentPage="trade" World="@Model.World" MilieuCode="@MilieuCode" />
    <div>&nbsp;</div>

    <div>
        <EditForm Model="@Options">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <table class="gridtable">
                <tr>
                    <th>Traveller Edition</th>
                    <th>Options</th>
                    <th>Broker Score</th>
                    @if (Options.IllegalGoods)
                    {
                        <th>Streetwise Score</th>
                    }
                    <th>Counterparty Score</th>

                </tr>
                <tr>
                    <td>
                        <InputSelect @bind-Value="Options.SelectedEdition">
                            @foreach (var item in TradeOptions.EditionList)
                            {
                                <option value="@(item.Code)" selected="@(Options.SelectedEditionCode == item.Code)"> @(item.Name)</option>
                            }
                        </InputSelect>
                    </td>
                    <td>
                        <label title="More variety in cargo types.">
                            <InputCheckbox @bind-Value="Options.AdvancedMode" />
                            Advanced Mode
                        </label>
                        <br />
                        <label title="Lowers the odds of finding rare goods. Adjusts the amount of goods available based on population.">
                            <InputCheckbox @bind-Value="Options.Raffle" />
                            Raffle
                        </label>
                        <br />
                        <label title="Illegal Goods use Streetwise instead of Broker.">
                            <InputCheckbox @bind-Value="Options.IllegalGoods" />
                            Allow Illegal Goods
                        </label>
                        <br />
                        <label title="Instead of rolling for price, assume the player gets an average price 10 before modifiers.">
                            <InputCheckbox @bind-Value="Options.SkipPriceRoll" />
                            Don't Roll for Price
                        </label>
                    </td>
                    <td>
                        <label title="This is the broker score of the PCs or their local broker.">
                            <InputSelect @bind-Value="Options.BrokerScoreCode">
                                @for (var score = -3; score <= 6; score++)
                                {
                                    <option value="@(score)" selected="@(Options.BrokerScore == score)"> @(score)</option>
                                }
                            </InputSelect>
                        </label>
                        @if (!Options.IllegalGoods)
                        {
                            <br />
                            <button @onclick="GenerateLocalBrokerCharacter">Generate Local Broker</button>
                        }
                    </td>
                    @if (Options.IllegalGoods)
                    {
                        <td>
                            <label title="This is the streetwise score of the PCs or their fence.">
                                <InputSelect @bind-Value="Options.StreetwiseScoreCode">
                                    @for (var score = -3; score <= 6; score++)
                                    {
                                        <option value="@(score)" selected="@(Options.StreetwiseScore == score)"> @(score)</option>
                                    }
                                </InputSelect>
                            </label>
                            <br />
                            <button @onclick="GenerateFenceCharacter">Generate Fence</button>
                        </td>
                    }

                    <td>
                        @if (Options.SelectedEdition == Edition.MGT2022)
                        {
                            <label title="This is the broker score of the selling or buying the goods from the PCs.">
                                <InputSelect @bind-Value="Options.CounterpartyScoreCode">
                                    @for (var score = -3; score <= 6; score++)
                                    {
                                        <option value="@(score)" selected="@(Options.CounterpartyScore== score)"> @(score)</option>
                                    }
                                </InputSelect>
                            </label>

                        }
                        else
                        {
                            <div>N/A for this edition.</div>
                        }
                        <br />
                        <button @onclick="GenerateCounterpartyCharacter">Generate Counterparty</button>
                    </td>
                </tr>

                @if (Model.Destinations != null)
                {
                    <tr><th rowspan="3">Purchase Options</th></tr>
                    <tr>
                        <th>Destination</th>
                    </tr>
                    <tr>
                        <td>
                            <InputSelect @bind-Value="Options.DestinationIndexCode">
                                <option value="" selected="@(string.IsNullOrEmpty(Options.DestinationIndexCode))"></option>

                                @for (var jump = 1; jump <= 6; jump++)
                                {
                                    if (Model.Destinations.Any(x => x.JumpDistance == jump))
                                    {
                                        <optgroup label="@("Jump " + jump)">
                                            @for (var index = 0; index < Model.Destinations.Count; index++)
                                                if (Model.Destinations[index].JumpDistance == jump)
                                                {
                                                    <option value="@(index)" selected="@(Options.DestinationIndex == index )">@Model.Destinations[index].Name</option>
                                                }
                                        </optgroup>
                                    }
                                }
                            </InputSelect>
                        </td>
                    </tr>
                }

                <tr><th rowspan="3">Sale Options</th></tr>
                <tr>
                    <th>Information Age</th>
                </tr>
                <tr>
                    <td>
                        <label title="This is how old your information is.">
                            <InputSelect @bind-Value="Options.AgeWeeks">
                                @for (var score = 0; score <= 8; score++)
                                {
                                    <option value="@(score)" selected="@(Options.AgeWeeks == score)"> @(score)</option>
                                }
                            </InputSelect>
                        </label>
                    </td>
                </tr>

            </table>
        </EditForm>
    </div>
    @if (Options.SelectedEdition == Edition.MGT2022)
    {
        <div>
            For information on finding a counterparty, see page 241. Supplier DM: @(GetSupplierDM()). Online suppliers are @(AllowOnlineSupplier() ? "allowed" : "not allowed").
            For information on finding a local broker or fence, see page 242.
        </div>
    }
    @if (LocalBrokerCharacter != null)
    {
        <h3>

            @(Options.IllegalGoods ? "Fence: " : "Local Broker: ")
            @((LocalBrokerCharacter.Title + " " + LocalBrokerCharacter.Name).TrimStart())
            &nbsp;<a href="@(LocalBrokerPermalink())" target="_blank" title="Permalink. Use this to share with your players."><span class="oi oi-link-intact" /></a>
        </h3>
        <div>

            @(Options.IllegalGoods ? "Streetwise is -2 to reflect the 20% fee charged by the fence and the DM+2." : "The local broker's DM+2 and 10% fee are included in the final price.")
            @if (IsInformer && Options.IllegalGoods)
            {
                <br />
                <font color="red">Fence is an informer, government agent or double-crosser</font>
            }
        </div>
    }

    @if (CounterpartyCharacter != null)
    {
        <h3>
            Counterparty: @((CounterpartyCharacter.Title + " " + CounterpartyCharacter.Name).TrimStart())
            &nbsp;<a href="@(CounterpartyPermalink())" target="_blank" title="Permalink. Use this to share with your players."><span class="oi oi-link-intact" /></a>
        </h3>
        <div>
            @if (CounterpartyIsInformer && Options.IllegalGoods)
            {
                <font color="red">Counterparty is an informer, government agent or double-crosser</font>
            }
        </div>
    }


    @if (Model.TradeList != null)
    {

        <div>&nbsp;</div>
        <h3 id="offers">
            Available Trade Goods
            <a @onclick="Reroll" href="#" title="Reroll"><span class="oi oi-random" /></a>
            <a href="@(Permalink())" target="_blank" title="Permalink. Use this to share with your players."><span class="oi oi-link-intact" /></a>
        </h3>

        <div>
            @if (Options.SkipPriceRoll)
            {
                <span>Purchase DM does not include broker score.<br />Expected Price is based on the average roll including purchase DM and broker scores.</span>
            }
            else
            {
                <span>Purchase DM does not include broker score.<br />Price modifier and current price include purchase DM, broker scores, and random roll.</span>
            }


            @if (Options.SelectedEdition == Edition.MGT2022)
            {
                <br />

                <span>For more information, see "Speculative Trade &amp; Smuggling" (page 241).</span>
            }
            else if (Options.SelectedEdition == Edition.MGT2)
            {
                <br />

                <span>For more information, see "Speculative Trade &amp; Smuggling" (page 210).</span>
            }
            else
            {
                <br />

                <span>For more information, see "Speculative Trade &amp; Smuggling" (page 162).</span>
            }
            @if (Options.AdvancedMode)
            {
                <br />

                <span>Advanced mode uses cargo subtypes from "Traveller Book 7: Merchant Prince".</span>
            }
        </div>
        <table class="gridtable">
            <tr>
                <th>Type</th>
                @if (Options.AdvancedMode)
                {
                    <th>Subtype</th>
                }
                <th>Tons</th>
                <th>Base Price</th>
                <th title="Availability of the good. This does not include broker/streetwise.">Purchase DM</th>
                @if (Options.SkipPriceRoll)
                {
                    <th>Expected Price</th>
                }
                else
                {
                    <th>Modified Roll</th>
                    <th>Price Modifier</th>
                    <th>Current Price</th>
                }
                @if (Options.DestinationIndex >= 0)
                {
                    <th title="Desirability of the good at the selected destination. This does not include broker/streetwise.">Destination DM</th>
                    <th title="This includes broker/streetwise.">Expected Profit</th>
                }
            </tr>
            @foreach (var lot in Model.TradeList.Lots)
            {
                <tr>
                    @{
                        var color = "";
                        var title = "";
                        if (!lot.Legal)
                        {
                            color = "background-color:pink";
                            title = "Illegal good.";
                        }
                        else if (lot.IsCommonGood)
                        {
                            color = "background-color:lightgreen";
                            title = "Commonly available good.";
                        }

                        <td title="@title" style="@color">@lot.Type</td>
                    }

                    @if (Options.AdvancedMode)
                    {
                        <td>@lot.Subtype</td>
                    }
                    <td>@lot.Tons</td>
                    <td>@lot.BasePrice.ToString("N0")</td>
                    <td>@lot.PurchaseDM</td>
                    @if (Options.SkipPriceRoll)
                    {
                        var bonus = (lot.Legal ? Options.BrokerScore : Options.StreetwiseScore);
                        var expectedPrice = lot.BasePrice * (1 - (0.05M * (bonus + lot.PurchaseDM)));
                        <td>
                            @((expectedPrice).ToString("N0"))
                        </td>
                    }
                    else
                    {
                        <td>@lot.Roll.ToString("N0")</td>
                        <td>@lot.PriceModifier.ToString("P2")</td>
                        <td>@lot.CurrentPrice.ToString("N0")</td>
                    }
                    @if (Options.DestinationIndex >= 0)
                    {
                        <td>@lot.DestinationDM</td>
                        @if (Options.SkipPriceRoll)
                        {
                            //Bonus is used for both buying and selling
                            var bonus = 2 * (lot.Legal ? Options.BrokerScore : Options.StreetwiseScore);
                            <td>
                                @(((bonus + lot.PurchaseDM + lot.DestinationDM ?? 0) * 5).ToString("N2"))%
                                <br />
                                @((lot.BasePrice * (bonus + lot.PurchaseDM + lot.DestinationDM ?? 0) * 0.05M).ToString("N0")) per ton
                            </td>
                        }
                        else
                        {
                            //Bonus is only used for selling. It was factored into the buying price.
                            var bonus = (lot.Legal ? Options.BrokerScore : Options.StreetwiseScore);
                            var expectedPrice = lot.BasePrice * (1 + (0.05M * (bonus + lot.DestinationDM ?? 0)));
                            <td>
                                @((100M * expectedPrice / lot.CurrentPrice).ToString("N0"))%
                                <br />
                                @((expectedPrice - lot.CurrentPrice).ToString("N0")) per ton
                            </td>
                        }
                    }
                </tr>
            }
        </table>
        <div>&nbsp;</div>

        <h3 id="bids">Desired Goods</h3>
        <p>Sale DM does not include broker score.<br />Price modifier and current price include sale DM, broker score, and random roll.</p>
        <table class="gridtable">
            <tr>
                <th>Type</th>
                @if (Options.AdvancedMode)
                {
                    <th>Subtype</th>
                }
                <th>Base Price</th>
                <th>Sale DM</th>
                <th>Modified Roll</th>
                <th>Price Modifier</th>
                <th>Current Price</th>
            </tr>
            @if (Options.AgeWeeks > 0)
            {
                <tr><td colspan="7" style="background-color:pink">Warning: The prices on this page will be @Options.AgeWeeks weeks old when you arrive.</td></tr>
            }
            @foreach (var lot in Model.TradeList.Bids)
            {
                <tr>
                    <td style="@( lot.Legal ? "" : "background-color:pink")">@lot.Type</td>
                    @if (Options.AdvancedMode)
                    {
                        <td>@lot.Subtype</td>
                    }
                    <td>@lot.BasePrice.ToString("N0")</td>
                    <td>@lot.SaleDM</td>
                    @if (Options.AgeWeeks == 0)
                    {
                        <td>@lot.Roll.ToString("N0")</td>
                        <td>@lot.PriceModifier.ToString("P2")</td>
                        <td>@lot.CurrentPrice.ToString("N0")</td>
                    }
                    else
                    {
                        <td>@lot.AgedRoll.ToString("N0")</td>
                        <td>@lot.AgedPriceModifier.ToString("P2")</td>
                        <td>@lot.AgedPrice.ToString("N0")</td>
                    }
                </tr>
            }
        </table>
    }

}
else if (LoadFailed)
{
    <h1>Error loading page.</h1>
}
else
{
    <h1>Loading</h1>
}
