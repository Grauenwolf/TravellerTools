@model Grauenwolf.TravellerTools.Web.Models.HomeIndexViewModel
@{
    ViewBag.Title = "Home Page";
}

<div class="row">
    <h2>Location</h2>
    <table class="gridtable">
        <tr>
            <th>Milieu</th>
            <td>
                @Html.DropDownList("milieu", Model.MilieuList(), new { onchange = "MilieuChanged($('#milieu')[0].value, $('#sector')[0])" })
            </td>
            <th>Sector</th>
            <td>
                @Html.DropDownList("sector", Model.SectorList(), new { onchange = "SectorChanged($('#sector')[0].value, $('#subsector')[0],$('#milieu')[0].value)" })
            </td>
            <th>Subsector</th>
            <td>
                <select id="subsector" onchange="SubsectorChanged($('#sector')[0].value, $('#subsector')[0].value, $('#world')[0], $('#milieu')[0].value)"></select>
            </td>
            <th>World</th>
            <td>
                <select id="world" onchange="WorldChanged($('#originUwp')[0], $('#destinationUwp')[0], $('#showTradeScreen')[0], $('#selectWorldForTrade')[0])"></select>
            </td>
        </tr>
        <tr><td colspan="8">Choose a world above or enter the UWP for the origin and destination.</td></tr>
        <tr>
            <th>Origin UWP</th>
            <td>
                <input type="text" id="originUwp" onkeypress="UwpChanged(readValue('originUwp'), readValue('destinationUwp'), $('#showTradeScreen')[0], $('#selectWorldForTrade')[0])" />
                <br />
                <label>TAS Alert</label> @Html.DropDownList("originTasZone", Model.TasZones())
            </td>
            <th>Destination UWP</th>
            <td>
                <input type="text" id="destinationUwp" onkeypress="UwpChanged(readValue('originUwp'), readValue('destinationUwp'), $('#showTradeScreen')[0], $('#selectWorldForTrade')[0])" />
                <br />
                <label>TAS Alert</label> @Html.DropDownList("destinationTasZone", Model.TasZones())
            </td>
            <th>Distance between Origin and Destination</th>
            <td colspan="3"><input type="number" value="1" id="jumpDistance" onkeypress="UwpChanged(readValue('originUwp'), readValue('destinationUwp'), $('#showTradeScreen')[0], $('#selectWorldForTrade')[0])" /> </td>
        </tr>

        <tr>
            <th>Random World</th>
            <td> <input id="showTradeScreen" type="button" value="Generate World" onclick="GenerateRandomWorld(readChecked('advancedMode'), readChecked('illegalGoods'), readValue('maxJumpDistance'), readValue('broker'), readChecked('mongoose2'), readChecked('advancedCharacters'), readValue('streetwise'), readChecked('raffle'), readValue('milieu'))" /></td>
        </tr>
    </table>

    <h2>Character</h2>
    <table class="gridtable">
        <tr>
            <th>Broker Score (INT)</th>
            <td>
                @Html.DropDownList("broker", Model.Scores())
            </td>
            <th>Streetwise Score (INT)</th>
            <td>
                @Html.DropDownList("streetwise", Model.Scores())
            </td>
        </tr>
    </table>
</div>

<div class="row">

    <h2>Trade Calculator</h2>

    <table class="gridtable">
        <tr>
            <td>
                <label> <input type="checkbox" checked="checked" id="mongoose2" /> Mongoose 2</label>
            </td>
            <td>
                <label> <input type="checkbox" id="advancedMode" /> Advanced Mode</label>
            </td>
            <td style="max-width:200px">
                <label> <input type="checkbox" id="raffle" /> Raffle</label><br />
                Lowers the odds of finding rare goods. Adjusts the amount of goods available based on population.
            </td>
            <td>
                <label> <input type="checkbox" id="illegalGoods" /> Allow Illegal Goods</label>
            </td>
            <td>
                <label> <input type="checkbox" id="advancedCharacters" />Advanced Characters</label>
            </td>
            <td>
                <label>Jump Distance</label>
                <input type="number" id="maxJumpDistance" value="3" />
            </td>
            <td>
                <input id="showTradeScreen" type="button" value="Generate Trade Info" onclick="GenerateTradeInfo(readValue('sector'), readValue('world'), readChecked('advancedMode'), readChecked('illegalGoods'), readValue('maxJumpDistance'), readValue('broker'), readChecked('mongoose2'), readChecked('advancedCharacters'), readValue('streetwise'), readChecked('raffle'), readValue('originUwp'), readValue('destinationUwp'), readValue('jumpDistance'), readValue('milieu'), readValue('originTasZone'),readValue('destinationTasZone') )" />
                @*<span id="selectWorldForTrade">Select a world</span>*@
            </td>
        </tr>
    </table>
</div>

<div class="row">

    <h2>Shopping</h2>
    <table class="gridtable">
        <tr>
            <th>World</th>
            <td>
                <label>Law Level</label>
                @Html.DropDownList("lawLevel", Model.LawLevels())
            </td>
            <td>
                <label>Tech Level</label>
                @Html.DropDownList("techLevel", Model.TechLevels())
            </td>
            <td>
                <label>Starport</label>
                @Html.DropDownList("starport", Model.Starports())
            </td>
            <td>
                <label>Population</label>
                @Html.DropDownList("population", Model.Populations())
            </td>
        </tr>
        <tr>
            <td>&nbsp;</td>
            <td>
                <label> <input type="checkbox" id="shopRoll" /> Auto-Roll</label>
                <br />
                If you don't check this, all items are printed with the roll the player needs.
            </td>
            <td>
                <input id="showTradeScreen" type="button" value="Generate Store Info" onclick="
    GenerateStoreInfo(readValue('lawLevel'), readValue('population'), readChecked('shopRoll'), readValue('starport'), readValue('techLevel'), '', '', readValue('broker'),readValue('streetwise'), readValue('milieu'))" />
            </td>
        </tr>
    </table>
</div>
<div class="row">
    <h2>Animals</h2>
    <table class="gridtable">
        <tr>
            <th>Mongoose 1</th>
            <td>
                <label>Terrain</label>
                @Html.DropDownList("terrain", Model.TerrainList())
            </td>
            <td>
                <label>Animal Type</label>
                @Html.DropDownList("animalType", Model.AnimalTypeList())
                <br />
                (only used when a terrain is selected)
            </td>

            <td>
                <input id="showAnimalScreen" type="button" value="Generate Animals" onclick="GenerateAnimals($('#terrain')[0].value, $('#animalType')[0].value)" />
            </td>
        </tr>
    </table>
    <div>&nbsp;</div>
    <table class="gridtable">
        <tr>
            <th rowspan="3">Animal Encounters (preview)</th>
            <td>
                <label>Terrain</label>
                @Html.DropDownList("terrain2", Model.TerrainList())
            </td>
            <td>
                <label>Animal Class</label>
                @Html.DropDownList("animalClass", Model.AnimalClassList())
                <br />
                (only used when a terrain is selected)
            </td>

            <td>
                <input id="showAnimalEncountersScreen" type="button" value="Generate Animals" onclick="GenerateAnimalEncounters($('#sector')[0].value, $('#world')[0].value, $('#terrain2')[0].value, $('#animalClass')[0].value, readValue('milieu'))" />
            </td>
        </tr>
        <tr style="display:none">
            <!-- Do we want these as individual options or should we always read from the selected world?-->
            <td>
                <label>Gravity</label>
                <select id="gravity">
                    <option value=""></option>
                    <option value="Low">Low</option>
                    <option value="Medium">Medium</option>
                    <option value="High">High</option>
                </select>
            </td>
            <td>
                <label>Atmosphere</label>
                <select id="Atmosphere">
                    <option value=""></option>
                </select>
            </td>
            <td>
                <label>Temperature</label>
                <select id="Temperature">
                    <option value=""></option>
                </select>
            </td>
            <td>
                <label>Hydrographics</label>
                <select id="Hydrographics">
                    <option value=""></option>
                </select>
            </td>
            <td>
                <label>Specials</label>
                <select id="Specials">
                    <option value=""></option>
                </select>
            </td>
        </tr>
        <tr><td colspan="10">Note: this requires <a target="_blank" href="http://www.drivethrurpg.com/product/93227/Supplement-11-Animal-Encounters">Supplment 11: Animal Encounters</a> to make sense. If you don't have that book, use the Mongoose 1 tool.</td></tr>
    </table>
</div>

<div class="row">
    <h2>Characters</h2>
    <div>This is used for creating NPCs only. Certain liberties where taken with the rules to allow for random character generation.</div>
    <table class="gridtable">
        <tr>
            <th>First Career</th>
            <td>
                @Html.DropDownList("firstCareer", Model.CareerList(), new { onchange = "CareerChanged($('#firstCareer')[0].value, $('#firstAssignment')[0], false)" })
            </td>
            <th>First Assignment</th>
            <td>
                <select id="firstAssignment"></select>
            </td>
            <th>Final Career</th>
            <td>
                @Html.DropDownList("finalCareer", Model.CareerList(), new { onchange = "CareerChanged($('#finalCareer')[0].value, $('#finalAssignment')[0], true)" })
            </td>
            <th>Final Assignment</th>
            <td>
                <select id="finalAssignment"></select>
            </td>
            <th>Age</th>
            <td>
                @Html.DropDownList("terms", Model.AgeList())
            </td>
            <td>
                <input id="showCharacterScreen" type="button" value="Generate Character" onclick="GenerateCharacter(readValue('firstAssignment'), readValue('finalCareer'),readValue('finalAssignment'), readChecked('terms'),[ readValue('skillA'),readValue('skillB'),readValue('skillC'),readValue('skillD')   ] )" />
            </td>
        </tr>
        <tr>
            <th colspan="2">Desired Skills</th>
            <td colspan="2">@Html.DropDownList("skillA", Model.SkillList())</td>
            <td colspan="2">@Html.DropDownList("skillB", Model.SkillList())</td>
            <td colspan="2">@Html.DropDownList("skillC", Model.SkillList())</td>
            <td colspan="2">@Html.DropDownList("skillD", Model.SkillList())</td>
        </tr>
    </table>
</div>
@*<div>Note: Psionics are not yet included.</div>*@
<div><span style="color:red;font-weight:700;font-size:larger">Warning: </span>Permalinks become invalid whenever a new version of Traveller Tools is created.</div>
<div>Names are based on <a href="https://github.com/RandomAPI/Randomuser.me-Node">RandomUser.me</a> and historic sources.</div>
<div>Personality traits are based on <a href="https://www.roleplayingtips.com/tools/1000-npc-traits/">1,000 NPC Traits</a></div>

@section Scripts {
    @Scripts.Render("~/Scripts/Home/Index.js?1")
}